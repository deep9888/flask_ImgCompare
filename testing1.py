# -*- coding: utf-8 -*-
"""testing1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xKOhL1mCLSm5lf-kt9tp759eu_IuHW4J
"""

import tensorflow as tf
import tensorflow_hub as hub
from PIL import Image
import numpy as np

model_url = "https://tfhub.dev/tensorflow/efficientnet/lite0/feature-vector/2"

IMAGE_SHAPE = (224, 224)

layer = hub.KerasLayer(model_url)
model = tf.keras.Sequential([layer])

def extract(file):
  file = Image.open(file).convert('L').resize(IMAGE_SHAPE)
  #display(file)

  file = np.stack((file,)*3, axis=-1)

  file = np.array(file)/255.0

  embedding = model.predict(file[np.newaxis, ...])
  #print(embedding)
  vgg16_feature_np = np.array(embedding)
  flattended_feature = vgg16_feature_np.flatten()

  #print(len(flattended_feature))
  #print(flattended_feature)
  #print('-----------')
  return flattended_feature

org1 = extract('./stool1.png')
org2 = extract('./Childrens-Stool-NE60-black-linoleum-1846893.jpg')
different = extract('./File.png')

from scipy.spatial import distance

metric = 'cosine'

dc = distance.cdist([org1], [org1], metric)[0]
print(dc)
print("the distance between Rendered Model Screenshot with it's own {}".format(dc))

dc = distance.cdist([org1], [different], metric)[0]
print(dc)
print("the distance between Rendered Model Screenshot with different image {}".format(dc))

dc = distance.cdist([org1], [org2], metric)[0]
print(dc)
print("the distance between Rendered Model Screenshot with it's own Reference Image {}".format(dc))

